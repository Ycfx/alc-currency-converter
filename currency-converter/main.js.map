{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/currency-service.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <p class=\\\"title\\\"> üèÜ ALC Currency Converter üèÜ</p>\\n  <p>üí≤üòéüí≤</p>\\n\\n  <mat-card class=\\\"card\\\">\\n    <div class=\\\"packaging\\\">\\n\\n      <div class=\\\"section\\\"> \\n        <div class=\\\"wrapper\\\">\\n          <div class=\\\"row\\\">\\n              1 {{ c1 }} equals {{ rate }} {{ c2 }}\\n          </div>\\n  \\n          <div class=\\\"row\\\">\\n            \\n            <div class=\\\"inside\\\">\\n              <div class=\\\"division\\\">\\n                <mat-form-field style=\\\"width:100px !important\\\">\\n                  <input matInput [(ngModel)]=\\\"n1\\\" (keyup)=\\\"onInputOne()\\\">\\n                </mat-form-field> \\n              </div>\\n  \\n              <div class=\\\"division\\\">\\n                <mat-form-field>\\n                  <mat-select [(value)]=\\\"c1\\\" (selectionChange)=\\\"onSelect()\\\">\\n                    <mat-option *ngFor=\\\"let currency of currencies\\\" [value]=\\\"currency.id\\\">\\n                      {{currency.currencyName}}\\n                    </mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n              </div>\\n            </div>\\n                \\n          </div>\\n  \\n          <div class=\\\"row\\\">\\n            \\n            <div class=\\\"inside\\\">\\n              <div class=\\\"division\\\">\\n                <mat-form-field style=\\\"width:100px !important\\\">\\n                  <input matInput [(ngModel)]=\\\"n2\\\" (keyup)=\\\"onInputTwo()\\\">\\n                </mat-form-field> \\n              </div>\\n  \\n              <div class=\\\"division\\\">\\n                <mat-form-field>\\n                    <mat-select [(value)]=\\\"c2\\\" (selectionChange)=\\\"onSelect()\\\">\\n                      <mat-option *ngFor=\\\"let currency of currencies\\\" [value]=\\\"currency.id\\\">\\n                        {{currency.currencyName}}\\n                      </mat-option>\\n                    </mat-select>\\n                </mat-form-field>\\n              </div>\\n            </div>\\n                \\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"section\\\" style=\\\"height:initial\\\">\\n        <img src=\\\"{{chart}}\\\" alt=\\\"chart\\\" class=\\\"chart\\\">\\n      </div>\\n\\n    </div>\\n  </mat-card>\\n</div>\\n\"","module.exports = \".title {\\n  font-size: 23px; }\\n\\n.card {\\n  width: 285px;\\n  margin: 0 auto; }\\n\\n.packaging {\\n  display: -ms-grid;\\n  display: grid;\\n  -ms-grid-rows: 1fr 1fr;\\n      grid-template-rows: 1fr 1fr; }\\n\\n.packaging .section {\\n    display: flex;\\n    transition: all .3s ease; }\\n\\n.wrapper {\\n  display: -ms-grid;\\n  display: grid;\\n  -ms-grid-rows: 1fr 1fr;\\n      grid-template-rows: 1fr 1fr; }\\n\\n.wrapper .row {\\n    display: flex;\\n    transition: all .3s ease; }\\n\\n.inside {\\n  display: -ms-grid;\\n  display: grid;\\n  -ms-grid-columns: 1fr 2fr;\\n      grid-template-columns: 1fr 2fr;\\n  grid-column-gap: 10px; }\\n\\n.inside .division {\\n    display: flex;\\n    transition: all .3s ease; }\\n\\n.chart {\\n  height: 100px;\\n  margin-top: 16%; }\\n\\n@media screen and (min-width: 800px) {\\n  .title {\\n    font-size: 30px; }\\n  .card {\\n    width: 700px;\\n    height: 250px;\\n    margin: 0 auto; }\\n  .packaging {\\n    -ms-grid-columns: 2fr 1fr;\\n        grid-template-columns: 2fr 1fr; }\\n  .chart {\\n    height: 110px;\\n    margin-top: 26%; } }\\n\"","import { Component,\n         OnInit } from '@angular/core';\nimport { CurrencyServiceService } from './currency-service.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [ CurrencyServiceService ]\n})\nexport class AppComponent implements\n      OnInit {\n\n  c1 = 'NGN';\n  c2 = 'USD';\n  n1 = 1;\n  n2;\n  rate;\n  currencies = [];\n  chart;\n\n  constructor(private currencyService: CurrencyServiceService,\n              public snackBar: MatSnackBar) {}\n\n  ngOnInit() {\n    this.getCurrencies();\n    this.getRate(this.c1, this.c2);\n    this.getChart(this.c1, this.c2);\n\n    // this is where the offline journey begins\n    this.registerServiceWorker();\n  }\n\n  onSelect() {\n    this.getRate(this.c1, this.c2);\n    this.getChart(this.c1, this.c2);\n  }\n\n  onInputOne() {\n    this.n2 = parseFloat((this.rate * this.n1).toFixed(3));\n  }\n\n  onInputTwo() {\n    this.n1 = parseFloat((this.n2 / this.rate).toFixed(3));\n  }\n\n  getCurrencies(): void {\n    this.currencyService.fetchCurrencies()\n        .subscribe(\n          response => {\n            // tslint:disable-next-line:prefer-const\n            for (const item of Object.keys(response['results'])) {\n              this.currencies.push(response['results'][item]);\n            }\n          }\n        );\n  }\n\n  getRate(c1, c2) {\n    this.currencyService.convertCurrency(c1, c2)\n        .subscribe(\n          response => {\n            this.rate = parseFloat(Object.entries(response)[0][1].toFixed(3));\n            this.n2 = this.n1 * this.rate;\n          }\n        );\n  }\n\n  getChart(c1, c2) {\n    this.chart = this.currencyService.fetchChart(c1, c2);\n  }\n\n  registerServiceWorker() {\n    if (!navigator.serviceWorker){ return; }\n\n    navigator.serviceWorker.register('/sw.js').then( (reg) => {\n      if (!navigator.serviceWorker.controller) {\n        return;\n      }\n\n      if (reg.waiting) {\n        console.log(`service worker waiting\n                      \\n\\rupdateReady() was called`);\n        this.updateReady(reg.waiting);\n      }\n\n      if (reg.installing) {\n        console.log(`service worker installing\n                    \\rtrackInstalling() was called`);\n        this.trackInstalling(reg.installing);\n      }\n\n      reg.addEventListener('updatefound', (event) => this.trackInstalling(reg.installing)\n       );\n    });\n\n    let refreshing;\n\n    navigator.serviceWorker.addEventListener('controllerchange', function(event) {\n      console.log('controller has changed');\n      if (refreshing) { return; }\n      window.location.reload();\n      refreshing = true;\n    });\n\n  }\n\n  updateReady(worker) {\n\n    const snackBarRef = this.snackBar.open(`ü§©Updates Available!`,\n                                           'Reload');\n    snackBarRef.afterDismissed().subscribe( (event) => {\n      console.log(`snackBar was clicked: ${event}`);\n      worker.postMessage({action: 'skipWaiting'})\n    }\n    );\n  }\n\n  trackInstalling(worker) {\n\n    console.log('inside trackInstalling');\n    worker.addEventListner('statechange', () => {\n      if (worker.state == 'installed') {\n        this.updateReady(worker);\n      }\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatDialogModule,\n  MatInputModule,\n  MatSelectModule,\n  MatSnackBarModule\n} from '@angular/material';\n// import { CleaveDirective } from 'angular-cleave';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n    // CleaveDirective\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDialogModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSnackBarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CurrencyServiceService {\n  protected baseUrl: string;\n  protected chartUrl: string;\n\n  constructor(private http: HttpClient) {\n    this.baseUrl = 'https://free.currencyconverterapi.com/api/v5';\n    this.chartUrl = 'https://www.google.com/finance/chart?q=CURRENCY';\n  }\n\n  convertCurrency(c1: string, c2: string) {\n    return this.http.get(`${ this.baseUrl }/convert?q=${ c1 }_${ c2 }&compact=ultra`)\n                    .pipe(map(response => response));\n  }\n\n  fetchCurrencies() {\n    return this.http.get(`${ this.baseUrl }/currencies`)\n                    .pipe(map(response => response));\n  }\n\n  fetchChart(c1: string, c2: string) {\n    return `${ this.chartUrl }:${ c1.toUpperCase() }${ c2.toUpperCase() }&chst=vkc&tkr=1&chsc=2&chs=270x94&p=5Y`;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}